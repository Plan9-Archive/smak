fn conf_enable_smak {
    extensions=(png jpg jpeg bmp)
    outextension=png
    prev_size=420x640
    thumb_size=128x128

    imagemagick_convert_cmd='convert $f -resize $size $outf'
    p9p_convert_cmd='{png -t9 $f || jpg -t9 $f || bmp -t9 $f} >[2]/dev/null | resample -x $s(1) | topng >$outf'
    convert_cmd=$p9p_convert_cmd

    imgs_root=`{pwd}^'/_werc/imgs'
    mkdir -p $imgs_root
    mkdir -p $imgs_root^'/prevs'
    mkdir -p $imgs_root^'/thumbs'
    base_path=`{basename -d $conf_wd}

    conf_enable_app smak
}

fn smak_init {
    if (~ `{basename $local_path} index)
	handler_body_main=imgindex
    if not if (test -f $werc_root^'/'^$local_path^'.'^$extensions)
	handler_body_main=imgprev
    if not
	handler_body_main=()
}

fn mkthumbs {
	ifs='x' {s=`{echo -n $thumb_size}}
	size=$thumb_size
	for (f in `{ls $1^/*.^$extensions}){
		name=`{basename $f}
		outf=$imgs_root^'/thumbs/'^`{echo $name | sed 's|\.[^\.]+$||'}^'.'^$outextension
		if(! test $outf -nt $f)
			eval $convert_cmd
	}
}

fn imgprev {
	name=`{basename $req_path}
	for (i in $req_path^'.'^$extensions)
		if (test -f $werc_root^'/'^$sitedir^$i)
			img=$i
	f=$werc_root^'/'^$sitedir^$img
	ifs='x' {s=`{echo -n $prev_size}}
	size=$prev_size
	outf=$imgs_root^'/prevs/'^$name^'.'^$outextension
	if(! test $outf -nt $f)
		eval $convert_cmd
	tpl_handler apps/smak/imgprev.tpl
}

fn imgindex {
	tpl_handler apps/smak/imgindex.tpl
}

fn dirlist {
	if (test $#* -lt 1)
		bname=`{basename -d $req_path}
	if not
		bname=`{cleanname $1}
	if (! ~ $bname $base_path){
		@{dirlist $bname^/..}
		echo '|'
		if (~ $bname `{basename -d $req_path})
			echo '<a href="..">..</a>'
	}
	@{ cd $sitedir^$bname
	ls -d */ | grep -v '^_werc$' | sed 's,.*,<a href="'^$bname^'/&">&</a>,'}
}

fn thumbs {
	imgs_dir=$sitedir^`{basename -d $req_path}
	mkthumbs $imgs_dir
	for (i in `{ls $imgs_dir^/*.^$extensions}) {
		p = `{basename $i | sed 's|\.[^\.]*$||'}
		s = $base_path^'/_werc/imgs/thumbs/'^$p^'.'^$outextension
		echo '<a href="'^$p^'"><img src="'^$s^'" alt="'^$p^'" title="'^$p^'" height='^$1^'px></a>'
	}
}

fn prevnext {
	bname=`{basename -d $req_path}
	ls -p $sitedir^$bname^/*.^$extensions | awk '
	   /^'^$1^'/{
	      sub("\.[^\.]*$", "", p);
	      t = (p == "") ? ".." : "prev"
	      print "<a href=\"'^$bname^'/" p "\">" t "</a>";
	      print "/";
	      getline;
	      sub("\.[^\.]*$", "");
	      t = ($0 == "") ? ".." : "next"
	      print "<a href=\"'^$bname^'/" $0 "\">" t "</a>";
	      exit;
	   }
	   {p = $0;}'
}

